{"version":3,"sources":["utils/request.js","index.js","utils/config.js","router.js"],"names":["parseJSON","response","json","checkStatus","status","error","Error","statusText","request","url","options","fetch","then","data","catch","err","app","dva","history","createHistory","router","require","default","start","menuGlobal","id","pid","name","icon","path","models","component","config","RouterConfig","map","index","dynamics","key","exact","dynamic"],"mappings":"wGAAA,wDAEA,SAASA,EAAUC,GACjB,OAAOA,EAASC,OAGlB,SAASC,EAAYF,GACnB,GAAIA,EAASG,QAAU,KAAOH,EAASG,OAAS,IAC9C,OAAOH,EAGT,IAAMI,EAAQ,IAAIC,MAAML,EAASM,YAEjC,MADAF,EAAMJ,SAAWA,EACXI,EAUO,SAASG,EAAQC,EAAKC,GACnC,OAAOC,IAAMF,EAAKC,GACfE,KAAKT,GACLS,KAAKZ,GACLY,MAAK,SAAAC,GAAI,MAAK,CAAEA,WAChBC,OAAM,SAAAC,GAAG,MAAK,CAAEA,Y,uEC5BrB,sEAkBMC,EAAMC,IAAI,CACZC,QAASC,QAUbH,EAAII,OAAOC,EAAQ,KAAYC,SAG/BN,EAAIO,MAAM,U,wKCJK,GACXC,WA7Be,CACf,CACIC,GAAI,QACJC,IAAK,IACLC,KAAM,qBACNC,KAAM,OACNC,KAAM,IACNC,OAAQ,iBAAM,CAAC,gCACfC,UAAW,kBAAM,wDCDjBP,G,OAAeQ,EAAfR,YAwBOS,UAtBf,YAAyC,IAAjBf,EAAgB,EAAhBA,QAASF,EAAO,EAAPA,IAC/B,OACE,kBAAC,SAAD,CAAQE,QAASA,GACf,kBAAC,SAAD,KAEIM,EAAWU,KAAI,WAAwBC,GAAxB,IAAGN,EAAH,EAAGA,KAASO,EAAZ,+BACb,kBAAC,QAAD,CACEC,IAAKF,EACLN,KAAMA,EACNS,OAAK,EACLP,UAAWQ,IAAQ,aACjBvB,OACGoB,c","file":"static/js/main.db484150.chunk.js","sourcesContent":["import fetch from 'dva/fetch';\r\n\r\nfunction parseJSON(response) {\r\n  return response.json();\r\n}\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nexport default function request(url, options) {\r\n  return fetch(url, options)\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .then(data => ({ data }))\r\n    .catch(err => ({ err }));\r\n}","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n// serviceWorker.unregister();\r\n// ======================================================================================\r\n\r\nimport dva from 'dva';\r\nimport './index.css';\r\nimport './style.less';\r\nimport 'normalize.css';\r\n\r\nimport createHistory from 'history/createHashHistory'\r\n\r\n// 1. Initialize\r\nconst app = dva({\r\n    history: createHistory()\r\n});\r\n\r\n// 2. Plugins\r\n// app.use({});\r\n\r\n// 3. Model\r\n// app.model(require('./models/app').default);\r\n\r\n// 4. Router\r\napp.router(require('./router').default);\r\n\r\n// 5. Start\r\napp.start('#root');\r\n","const menuGlobal = [\r\n    {\r\n        id: 'index',\r\n        pid: '0',\r\n        name: '购物车',\r\n        icon: 'user',\r\n        path: '/',\r\n        models: () => [import('../models/cart')], //models可多个\r\n        component: () => import('../pages/index'),\r\n    },\r\n    // {\r\n    //     id:'bbb',\r\n    //     pid:'0',\r\n    //     name:'bbb页',\r\n    //     icon:'user',\r\n    //     path: '/aaa/bbb',\r\n    //     component: () => import('../pages/bbb'),\r\n    // }, \r\n    // {\r\n    //     id:'ccc',\r\n    //     pid:'0',\r\n    //     name:'ccc页',\r\n    //     icon:'user',\r\n    //     path: '/ccc',\r\n    //     component: () => import('../pages/ccc'),\r\n    // }, \r\n];\r\n\r\nexport default {\r\n    menuGlobal\r\n}\r\n","import React from 'react';\r\nimport { Router, Route, Switch } from 'dva/router';\r\nimport dynamic from 'dva/dynamic'\r\n\r\nimport { config } from './utils'\r\n\r\n\r\nconst { menuGlobal } = config\r\n\r\nfunction RouterConfig({ history, app }) {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        {\r\n          menuGlobal.map(({ path, ...dynamics }, index) => (\r\n            <Route\r\n              key={index}\r\n              path={path}\r\n              exact\r\n              component={dynamic({\r\n                app,\r\n                ...dynamics\r\n              })}\r\n            />\r\n          ))\r\n        }\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterConfig;\r\n\r\n\r\n"],"sourceRoot":""}